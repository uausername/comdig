#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–±—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ (—Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç –∏ summary)

# –°–±—Ä–æ—Å–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤–∏–¥–µ–æ ID 1
docker-compose run --rm comments-downloader python reset_video_data.py 11

# –°–±—Ä–æ—Å–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç –¥–ª—è –≤–∏–¥–µ–æ ID 1
docker-compose run --rm comments-downloader python reset_video_data.py 1 --transcript-only

# –°–±—Ä–æ—Å–∏—Ç—å —Ç–æ–ª—å–∫–æ summary –¥–ª—è –≤–∏–¥–µ–æ ID 1
docker-compose run --rm comments-downloader python reset_video_data.py 1 --summary-only

# –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–∞–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ
docker-compose run --rm comments-downloader python reset_video_data.py --stats

# –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ (—Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç + summary)
docker-compose run --rm comments-downloader python reset_video_data.py --all
"""

from models import get_db_session, Video, Comment

def reset_video_data(video_id: int, transcript_only: bool = False, summary_only: bool = False) -> bool:
    """
    –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤–∏–¥–µ–æ (—Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç –∏/–∏–ª–∏ summary)
    
    Args:
        video_id: ID –≤–∏–¥–µ–æ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        transcript_only: –°–±—Ä–æ—Å–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç
        summary_only: –°–±—Ä–æ—Å–∏—Ç—å —Ç–æ–ª—å–∫–æ summary
        
    Returns:
        bool: True –µ—Å–ª–∏ —Å–±—Ä–æ—Å –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ
    """
    session = get_db_session()
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ
        video = session.query(Video).filter_by(id=video_id).first()
        if not video:
            print(f"‚ùå –í–∏–¥–µ–æ —Å ID {video_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            return False
        
        print(f"üé¨ –í–∏–¥–µ–æ ID: {video_id}")
        print(f"üìπ YouTube ID: {video.video_id}")
        print(f"üîó URL: {video.youtube_url}")
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —á—Ç–æ —Å–±—Ä–∞—Å—ã–≤–∞—Ç—å
        reset_transcript = not summary_only
        reset_summary = not transcript_only
        
        changes_made = False
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç
        if reset_transcript and video.transcript:
            print(f"üîÑ –°–±—Ä–∞—Å—ã–≤–∞—é —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç (–¥–ª–∏–Ω–∞: {len(video.transcript)} —Å–∏–º–≤–æ–ª–æ–≤)")
            video.transcript = None
            changes_made = True
        elif reset_transcript:
            print("‚ÑπÔ∏è –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç —É–∂–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º summary
        if reset_summary and video.summary:
            print(f"üîÑ –°–±—Ä–∞—Å—ã–≤–∞—é summary (–¥–ª–∏–Ω–∞: {len(video.summary)} —Å–∏–º–≤–æ–ª–æ–≤)")
            video.summary = None
            changes_made = True
        elif reset_summary:
            print("‚ÑπÔ∏è Summary —É–∂–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
        
        if changes_made:
            session.commit()
            print(f"‚úÖ –î–∞–Ω–Ω—ã–µ –≤–∏–¥–µ–æ {video_id} —Å–±—Ä–æ—à–µ–Ω—ã")
        else:
            print(f"‚ÑπÔ∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–±—Ä–æ—Å–∞ —É –≤–∏–¥–µ–æ {video_id}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –¥–∞–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ: {e}")
        session.rollback()
        return False
    finally:
        session.close()

def reset_all_video_data() -> bool:
    """–°–±—Ä–∞—Å—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤—Å–µ—Ö –≤–∏–¥–µ–æ"""
    session = get_db_session()
    try:
        # –ü–æ–ª—É—á–∞–µ–º –í–°–ï –≤–∏–¥–µ–æ
        all_videos = session.query(Video).all()
        
        if not all_videos:
            print("‚ÑπÔ∏è –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –≤–∏–¥–µ–æ")
            return True
        
        # –§–∏–ª—å—Ç—Ä—É–µ–º –≤–∏–¥–µ–æ —Å –¥–∞–Ω–Ω—ã–º–∏
        videos_with_data = [v for v in all_videos if v.transcript or v.summary]
        videos_without_data = [v for v in all_videos if not v.transcript and not v.summary]
        
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ –≤–∏–¥–µ–æ:")
        print(f"   - –° –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è —Å–±—Ä–æ—Å–∞: {len(videos_with_data)}")
        print(f"   - –£–∂–µ –±–µ–∑ –¥–∞–Ω–Ω—ã—Ö: {len(videos_without_data)}")
        print(f"   - –í—Å–µ–≥–æ –≤–∏–¥–µ–æ: {len(all_videos)}")
        
        if videos_without_data:
            print(f"\nüìù –í–∏–¥–µ–æ –±–µ–∑ –¥–∞–Ω–Ω—ã—Ö (–ø—Ä–æ–ø—É—Å–∫–∞—é—Ç—Å—è):")
            for video in videos_without_data:
                print(f"   - ID {video.id}: {video.video_id}")
        
        if not videos_with_data:
            print("‚ÑπÔ∏è –ù–µ—Ç –≤–∏–¥–µ–æ —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è —Å–±—Ä–æ—Å–∞")
            return True
        
        print(f"\nüîÑ –í–∏–¥–µ–æ –¥–ª—è —Å–±—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö:")
        for video in videos_with_data:
            transcript_info = f"—Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç ({len(video.transcript)} —Å–∏–º–≤–æ–ª–æ–≤)" if video.transcript else "–Ω–µ—Ç —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–∞"
            summary_info = f"summary ({len(video.summary)} —Å–∏–º–≤–æ–ª–æ–≤)" if video.summary else "–Ω–µ—Ç summary"
            print(f"   - ID {video.id}: {video.video_id} - {transcript_info}, {summary_info}")
        
        confirm = input(f"\n‚ö†Ô∏è –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —É {len(videos_with_data)} –≤–∏–¥–µ–æ? (yes/no): ")
        if confirm.lower() != 'yes':
            print("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
            return False
        
        reset_count = 0
        for video in videos_with_data:
            print(f"üîÑ –°–±—Ä–∞—Å—ã–≤–∞—é –¥–∞–Ω–Ω—ã–µ –≤–∏–¥–µ–æ ID: {video.id} ({video.video_id})")
            video.transcript = None
            video.summary = None
            reset_count += 1
        
        session.commit()
        print(f"‚úÖ –î–∞–Ω–Ω—ã–µ —Å–±—Ä–æ—à–µ–Ω—ã –¥–ª—è {reset_count} –≤–∏–¥–µ–æ")
        
        if videos_without_data:
            print(f"‚ÑπÔ∏è {len(videos_without_data)} –≤–∏–¥–µ–æ –ø—Ä–æ–ø—É—â–µ–Ω–æ (—É–∂–µ –±–µ–∑ –¥–∞–Ω–Ω—ã—Ö)")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –º–∞—Å—Å–æ–≤–æ–º —Å–±—Ä–æ—Å–µ: {e}")
        session.rollback()
        return False
    finally:
        session.close()

def show_video_data_stats():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–∞–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ"""
    session = get_db_session()
    try:
        videos = session.query(Video).all()
        print("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ:")
        print("=" * 60)
        
        total_videos = len(videos)
        videos_with_transcript = 0
        videos_with_summary = 0
        videos_with_both = 0
        
        for video in videos:
            has_transcript = video.transcript is not None
            has_summary = video.summary is not None
            
            if has_transcript:
                videos_with_transcript += 1
            if has_summary:
                videos_with_summary += 1
            if has_transcript and has_summary:
                videos_with_both += 1
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –∫–∞–∂–¥–æ–≥–æ –≤–∏–¥–µ–æ
            print(f"\nüé¨ –í–∏–¥–µ–æ ID: {video.id}")
            print(f"   YouTube ID: {video.video_id or 'N/A'}")
            print(f"   –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç: {'‚úÖ' if has_transcript else '‚ùå'} {f'({len(video.transcript)} —Å–∏–º–≤–æ–ª–æ–≤)' if has_transcript else ''}")
            print(f"   Summary: {'‚úÖ' if has_summary else '‚ùå'} {f'({len(video.summary)} —Å–∏–º–≤–æ–ª–æ–≤)' if has_summary else ''}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
            comments_count = session.query(Comment).filter_by(video_id=video.id).count()
            ranked_count = session.query(Comment).filter(
                Comment.video_id == video.id,
                Comment.comment_rank.isnot(None)
            ).count()
            print(f"   –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: {comments_count} (—Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–æ: {ranked_count})")
        
        print(f"\nüìà –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"   –í—Å–µ–≥–æ –≤–∏–¥–µ–æ: {total_videos}")
        print(f"   –° —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–æ–º: {videos_with_transcript} ({videos_with_transcript/total_videos*100:.1f}%)" if total_videos > 0 else "   –° —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–æ–º: 0")
        print(f"   –° summary: {videos_with_summary} ({videos_with_summary/total_videos*100:.1f}%)" if total_videos > 0 else "   –° summary: 0")
        print(f"   –° –ø–æ–ª–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏: {videos_with_both} ({videos_with_both/total_videos*100:.1f}%)" if total_videos > 0 else "   –° –ø–æ–ª–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏: 0")
        
    finally:
        session.close()

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    import sys
    
    if len(sys.argv) < 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print("  python reset_video_data.py <video_id>                    # –°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –≤–∏–¥–µ–æ")
        print("  python reset_video_data.py <video_id> --transcript-only  # –°–±—Ä–æ—Å–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç")
        print("  python reset_video_data.py <video_id> --summary-only     # –°–±—Ä–æ—Å–∏—Ç—å —Ç–æ–ª—å–∫–æ summary")
        print("  python reset_video_data.py --stats                       # –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
        print("  python reset_video_data.py --all                         # –°–±—Ä–æ—Å–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤—Å–µ—Ö –≤–∏–¥–µ–æ")
        print("\n–ü—Ä–∏–º–µ—Ä—ã:")
        print("  docker-compose run --rm comments-downloader python reset_video_data.py 1")
        print("  docker-compose run --rm comments-downloader python reset_video_data.py 1 --transcript-only")
        print("  docker-compose run --rm comments-downloader python reset_video_data.py --stats")
        return
    
    try:
        if sys.argv[1] == "--stats":
            show_video_data_stats()
        elif sys.argv[1] == "--all":
            print("üîÑ –ú–∞—Å—Å–æ–≤—ã–π —Å–±—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –≤—Å–µ—Ö –≤–∏–¥–µ–æ")
            reset_all_video_data()
        else:
            video_id = int(sys.argv[1])
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–ª–∞–≥–∏
            transcript_only = "--transcript-only" in sys.argv
            summary_only = "--summary-only" in sys.argv
            
            if transcript_only and summary_only:
                print("‚ùå –ù–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å --transcript-only –∏ --summary-only –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ")
                return
            
            action_desc = "—Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–∞" if transcript_only else "summary" if summary_only else "–≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö"
            print(f"üîÑ –°–±—Ä–æ—Å {action_desc} –¥–ª—è –≤–∏–¥–µ–æ ID: {video_id}")
            
            reset_video_data(video_id, transcript_only, summary_only)
        
    except ValueError:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç video_id. –î–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ.")
    except KeyboardInterrupt:
        print("\nüëã –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main() 