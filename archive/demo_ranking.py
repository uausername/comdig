#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —Å–∏—Å—Ç–µ–º—ã —Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ —Å –º–æ–∫–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
"""

import random
from models import get_db_session, Video, Comment
from comment_ranker import CommentRanker
import time

class MockCommentRanker(CommentRanker):
    """–ú–æ–∫–æ–≤–∞—è –≤–µ—Ä—Å–∏—è —Ä–∞–Ω–∂–∏—Ä–æ–≤—â–∏–∫–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    
    def _rank_single_comment(self, comment_text: str, video_summary: str) -> float:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –º–æ–∫–æ–≤—ã–π —Ä–∞–Ω–≥ –Ω–∞ –æ—Å–Ω–æ–≤–µ —ç–≤—Ä–∏—Å—Ç–∏–∫"""
        
        # –ü—Ä–æ—Å—Ç—ã–µ —ç–≤—Ä–∏—Å—Ç–∏–∫–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        rank = 0.5  # –±–∞–∑–æ–≤—ã–π —Ä–∞–Ω–≥
        
        # –î–ª–∏–Ω–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –æ–±—ã—á–Ω–æ –±–æ–ª–µ–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã
        if len(comment_text) > 100:
            rank += 0.2
        elif len(comment_text) < 20:
            rank -= 0.2
            
        # –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –±–æ–ª–µ–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–º–∏
        if '?' in comment_text:
            rank += 0.1
            
        # –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Ç–æ–ª—å–∫–æ —Å —ç–º–æ–¥–∑–∏ –º–µ–Ω–µ–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã
        if len(comment_text.strip()) < 10 and any(ord(char) > 127 for char in comment_text):
            rank -= 0.3
            
        # –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏ –±–æ–ª–µ–µ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã
        keywords = ['—Ä–µ—Ü–µ–ø—Ç', '–∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç', '–ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ', '–≤–∫—É—Å', '—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞', '–≤—Ä–µ–º—è']
        for keyword in keywords:
            if keyword.lower() in comment_text.lower():
                rank += 0.15
                break
                
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–º–Ω–æ–≥–æ —Å–ª—É—á–∞–π–Ω–æ—Å—Ç–∏
        rank += random.uniform(-0.1, 0.1)
        
        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω
        return max(0.0, min(1.0, rank))

def create_demo_data():
    """–°–æ–∑–¥–∞–µ—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç"""
    session = get_db_session()
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É–∂–µ –¥–µ–º–æ-–≤–∏–¥–µ–æ
        demo_video = session.query(Video).filter(
            Video.youtube_url.like("%DEMO%")
        ).first()
        
        if demo_video:
            print("‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç")
            return demo_video.id
            
        print("üîÑ –°–æ–∑–¥–∞—é –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ...")
        
        # –°–æ–∑–¥–∞–µ–º –¥–µ–º–æ-–≤–∏–¥–µ–æ
        demo_video = Video(
            youtube_url="https://www.youtube.com/watch?v=DEMO123",
            title="–î–µ–º–æ: –ö–∞–∫ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–π —Ç–æ—Ä—Ç",
            channel="–ö—É–ª–∏–Ω–∞—Ä–Ω—ã–π –∫–∞–Ω–∞–ª",
            upload_date="2024-12-20",
            summary="–í —ç—Ç–æ–º –≤–∏–¥–µ–æ –ø–æ–∫–∞–∑–∞–Ω —Ä–µ—Ü–µ–ø—Ç –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è —à–æ–∫–æ–ª–∞–¥–Ω–æ–≥–æ —Ç–æ—Ä—Ç–∞. –†–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –æ –≤—ã–±–æ—Ä–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤, —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ –≤—ã–ø–µ—á–∫–∏ –∏ —Å–µ–∫—Ä–µ—Ç–∞—Ö –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –∫—Ä–µ–º–∞."
        )
        session.add(demo_video)
        session.commit()
        
        # –°–æ–∑–¥–∞–µ–º –¥–µ–º–æ-–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
        demo_comments = [
            "–û—Ç–ª–∏—á–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç! –ü–æ–ø—Ä–æ–±–æ–≤–∞–ª - –ø–æ–ª—É—á–∏–ª–æ—Å—å –æ—á–µ–Ω—å –≤–∫—É—Å–Ω–æ üëç",
            "–ê –∫–∞–∫—É—é —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –¥—É—Ö–æ–≤–∫–∏ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å?",
            "üòçüòçüòç",
            "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ! –û—Å–æ–±–µ–Ω–Ω–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å –ø—Ä–æ –∫—Ä–µ–º",
            "–ú–æ–∂–Ω–æ –ª–∏ –∑–∞–º–µ–Ω–∏—Ç—å —à–æ–∫–æ–ª–∞–¥ –Ω–∞ –∫–∞–∫–∞–æ-–ø–æ—Ä–æ—à–æ–∫?",
            "–ü–µ—Ä–≤—ã–π —Ä–∞–∑ –ø–µ–∫—É —Ç–æ—Ä—Ç, –ø–æ–ª—É—á–∏–ª–æ—Å—å –Ω–µ –æ—á–µ–Ω—å... –ß—Ç–æ –º–æ–≥–ª–æ –ø–æ–π—Ç–∏ –Ω–µ —Ç–∞–∫?",
            "üëèüëèüëè",
            "–£ –º–µ–Ω—è –Ω–µ—Ç –º–∏–∫—Å–µ—Ä–∞, –º–æ–∂–Ω–æ –ª–∏ –≤–∑–±–∏—Ç—å –≤—Ä—É—á–Ω—É—é?",
            "–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ —Ç–æ—Ä—Ç –¥–æ–ª–∂–µ–Ω –æ—Å—Ç—ã–≤–∞—Ç—å?",
            "–ö–ª–∞—Å—Å–Ω–æ–µ –≤–∏–¥–µ–æ, –Ω–æ –º—É–∑—ã–∫–∞ —Å–ª–∏—à–∫–æ–º –≥—Ä–æ–º–∫–∞—è",
            "–ê —Å–∫–æ–ª—å–∫–æ –∫–∞–ª–æ—Ä–∏–π –≤ –æ–¥–Ω–æ–º –∫—É—Å–æ—á–∫–µ?",
            "–ü–æ–ø—Ä–æ–±–æ–≤–∞–ª–∞ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ä–µ—Ö–∏ - —Å—Ç–∞–ª–æ –µ—â–µ –≤–∫—É—Å–Ω–µ–µ!",
            "–ì–¥–µ –∫—É–ø–∏—Ç—å —Ç–∞–∫—É—é —Ñ–æ—Ä–º—É –¥–ª—è –≤—ã–ø–µ—á–∫–∏?",
            "–ú–æ–π —Ç–æ—Ä—Ç –ø–æ–ª—É—á–∏–ª—Å—è —Å—É—Ö–æ–π, —á—Ç–æ –¥–µ–ª–∞—Ç—å?",
            "–°–ø–∞—Å–∏–±–æ! –¢–µ–ø–µ—Ä—å –∑–Ω–∞—é –∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–∑–±–∏–≤–∞—Ç—å –±–µ–ª–∫–∏",
            "üéÇüéÇüéÇ",
            "–ê –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ–µ –º–∞—Å–ª–æ –≤–º–µ—Å—Ç–æ —Å–ª–∏–≤–æ—á–Ω–æ–≥–æ?",
            "–û—Ç–ª–∏—á–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ —Ç–µ—Ö–Ω–∏–∫–∏! –û—á–µ–Ω—å –ø–æ–º–æ–≥–ª–æ",
            "–ö–æ–≥–¥–∞ –±—É–¥–µ—Ç —Å–ª–µ–¥—É—é—â–∏–π —Ä–µ—Ü–µ–ø—Ç?",
            "–ü–æ–ø—Ä–æ–±—É—é –Ω–∞ –≤—ã—Ö–æ–¥–Ω—ã—Ö, –≤—ã–≥–ª—è–¥–∏—Ç –Ω–µ—Å–ª–æ–∂–Ω–æ"
        ]
        
        for i, text in enumerate(demo_comments, 1):
            comment = Comment(
                comment_id=f"demo_comment_{i}",
                video_id=demo_video.id,
                author=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å{i}",
                text=text,
                likes=random.randint(0, 50),
                published_at=None,
                parent_id=None,
                comment_rank=None
            )
            session.add(comment)
            
        session.commit()
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ –¥–µ–º–æ-–≤–∏–¥–µ–æ –∏ {len(demo_comments)} –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤")
        return demo_video.id
        
    finally:
        session.close()

def demo_ranking():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É —Å–∏—Å—Ç–µ–º—ã —Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üéØ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –°–ò–°–¢–ï–ú–´ –†–ê–ù–ñ–ò–†–û–í–ê–ù–ò–Ø –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ï–í")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    demo_video_id = create_demo_data()
    
    if not demo_video_id:
        # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å, –ø–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ
        session = get_db_session()
        try:
            demo_video = session.query(Video).filter(
                Video.youtube_url.like("%DEMO%")
            ).first()
            
            if not demo_video:
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–≤–æ–µ –¥–æ—Å—Ç—É–ø–Ω–æ–µ –≤–∏–¥–µ–æ
                demo_video = session.query(Video).first()
                if not demo_video:
                    print("‚ùå –ù–µ—Ç –≤–∏–¥–µ–æ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏")
                    return
                print(f"üîÑ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –≤–∏–¥–µ–æ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏")
            demo_video_id = demo_video.id
        finally:
            session.close()
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–¥–µ–æ
    session = get_db_session()
    try:
        demo_video = session.query(Video).filter_by(id=demo_video_id).first()
        if not demo_video:
            print("‚ùå –í–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            return
            
        print(f"\nüé¨ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–∏–¥–µ–æ: {demo_video.title}")
        print(f"üìù Summary: {demo_video.summary[:100] if demo_video.summary else '–ù–µ—Ç summary'}...")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –¥–æ —Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏—è
        comments = session.query(Comment).filter_by(video_id=demo_video_id).all()
        print(f"\nüìä –í—Å–µ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {len(comments)}")
        
        unranked = [c for c in comments if c.comment_rank is None]
        print(f"üîÑ –ù–µ –ø—Ä–æ—Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–æ: {len(unranked)}")
        
    finally:
        session.close()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏–µ
    print("\nüöÄ –ó–∞–ø—É—Å–∫–∞—é —Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –º–æ–∫–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏...")
    ranker = MockCommentRanker()
    
    success = ranker.rank_comments_for_video(demo_video_id)
    
    if success:
        print("\nüèÜ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏—è:")
        print("=" * 50)
        
        ranked_comments = ranker.get_ranked_comments(demo_video_id, min_rank=0.0)
        
        if ranked_comments:
            print(f"\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
            ranks = [c['rank'] for c in ranked_comments]
            avg_rank = sum(ranks) / len(ranks)
            high_quality = len([r for r in ranks if r >= 0.7])
            medium_quality = len([r for r in ranks if 0.3 <= r < 0.7])
            low_quality = len([r for r in ranks if r < 0.3])
            
            print(f"–°—Ä–µ–¥–Ω–∏–π —Ä–∞–Ω–≥: {avg_rank:.3f}")
            print(f"–í—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ (‚â•0.7): {high_quality}")
            print(f"–°—Ä–µ–¥–Ω–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ (0.3-0.7): {medium_quality}")
            print(f"–ù–∏–∑–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ (<0.3): {low_quality}")
            
            print(f"\nü•á –¢–æ–ø-5 —Å–∞–º—ã—Ö –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤:")
            for i, comment in enumerate(ranked_comments[:5], 1):
                print(f"\n{i}. –†–∞–Ω–≥: {comment['rank']:.3f} | –õ–∞–π–∫–∏: {comment['likes']}")
                print(f"   –ê–≤—Ç–æ—Ä: {comment['author']}")
                print(f"   –¢–µ–∫—Å—Ç: {comment['text']}")
                
            if len(ranked_comments) >= 3:
                print(f"\nü•â –¢–æ–ø-3 –Ω–∞–∏–º–µ–Ω–µ–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è:")
                for i, comment in enumerate(ranked_comments[-3:], 1):
                    print(f"\n{i}. –†–∞–Ω–≥: {comment['rank']:.3f} | –õ–∞–π–∫–∏: {comment['likes']}")
                    print(f"   –ê–≤—Ç–æ—Ä: {comment['author']}")
                    print(f"   –¢–µ–∫—Å—Ç: {comment['text']}")
        else:
            print("‚ùå –ù–µ—Ç –ø—Ä–æ—Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤")
    
    print(f"\n‚ú® –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    try:
        demo_ranking()
    except KeyboardInterrupt:
        print("\nüëã –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main() 