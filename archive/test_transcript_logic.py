#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–∞
"""

import os
import sys
from process_video import VideoProcessor

def test_transcript_logic():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–æ–≤—É—é –ª–æ–≥–∏–∫—É –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–∞"""
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ù–û–í–û–ô –õ–û–ì–ò–ö–ò –û–ë–†–ê–ë–û–¢–ö–ò –¢–†–ê–ù–°–ö–†–ò–ü–¢–ê")
    print("="*60)
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä
    processor = VideoProcessor()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–∞
    print("\n1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ _is_transcript_valid():")
    
    test_cases = [
        ("–ù–æ—Ä–º–∞–ª—å–Ω—ã–π —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç —Å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–º —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ–º –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞", True),
        ("–¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –≤–∏–¥–µ–æ", False),
        ("–¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω", False),
        ("", False),
        ("–ö–æ—Ä–æ—Ç–∫–∏–π", False),
        (None, False)
    ]
    
    for transcript, expected in test_cases:
        result = processor._is_transcript_valid(transcript)
        status = "‚úÖ" if result == expected else "‚ùå"
        print(f"   {status} '{transcript}' -> {result} (–æ–∂–∏–¥–∞–ª–æ—Å—å: {expected})")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –≤–∏–¥–µ–æ
    print("\n2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ _get_transcript() —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –≤–∏–¥–µ–æ:")
    fake_video_id = "FAKE_VIDEO_ID_123"
    transcript = processor._get_transcript(fake_video_id)
    print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {transcript}")
    print(f"   –í–∞–ª–∏–¥–Ω–æ—Å—Ç—å: {processor._is_transcript_valid(transcript)}")
    
    print("\nüéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_transcript_logic() 