#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã Gemini 2.5 Flash Preview 05-20
"""

import os
import sys

def test_gemini_25():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∏ —Ä–∞–±–æ—Ç—É Gemini 2.5 Flash Preview 05-20"""
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Gemini 2.5 Flash Preview 05-20")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º API –∫–ª—é—á
    api_key = os.getenv('GEMINI_API_KEY')
    if not api_key:
        print("‚ùå GEMINI_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return False
    
    print(f"‚úÖ API –∫–ª—é—á –Ω–∞–π–¥–µ–Ω: {api_key[:10]}...")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
        print("üì¶ –ò–º–ø–æ—Ä—Ç–∏—Ä—É—é –±–∏–±–ª–∏–æ—Ç–µ–∫–∏...")
        from google import genai
        from google.genai import types
        print("‚úÖ –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
        print("üîß –°–æ–∑–¥–∞—é –∫–ª–∏–µ–Ω—Ç —Å v1alpha API...")
        client = genai.Client(
            api_key=api_key,
            http_options=types.HttpOptions(api_version='v1alpha')
        )
        print("‚úÖ –ö–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
        print("üöÄ –û—Ç–ø—Ä–∞–≤–ª—è—é —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å...")
        
                 response = client.models.generate_content(
             model='gemini-2.5-flash-preview-05-20',
             contents='–û—Ç–≤–µ—Ç—å –æ–¥–Ω–∏–º —Å–ª–æ–≤–æ–º: —Ç–µ—Å—Ç',
                          config=types.GenerateContentConfig(
                 temperature=0.1,
                 max_output_tokens=50,
                 top_p=0.8,
                 top_k=40
             )
         )
        
        print("üì® –ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –æ—Ç–≤–µ—Ç...")
        
                 # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–≤–µ—Ç
         if response:
             print(f"üìã –¢–∏–ø –æ—Ç–≤–µ—Ç–∞: {type(response)}")
             
             # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –∫ —Ç–µ–∫—Å—Ç—É
             if hasattr(response, 'text') and response.text:
                 print(f"‚úÖ –ú–æ–¥–µ–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç! –û—Ç–≤–µ—Ç: '{response.text.strip()}'")
                 print("üéâ Gemini 2.5 Flash Preview 05-20 –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞!")
                 return True
             
             # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤
             elif hasattr(response, 'candidates') and response.candidates:
                 candidate = response.candidates[0]
                 print(f"üìã Finish reason: {candidate.finish_reason}")
                 
                 if candidate.content and candidate.content.parts:
                     text = candidate.content.parts[0].text
                     print(f"‚úÖ –ú–æ–¥–µ–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç! –û—Ç–≤–µ—Ç: '{text.strip()}'")
                     print("üéâ Gemini 2.5 Flash Preview 05-20 –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞!")
                     return True
                 else:
                     print("‚ùå –ö–æ–Ω—Ç–µ–Ω—Ç –ø—É—Å—Ç–æ–π –∏–ª–∏ parts=None")
                     if candidate.finish_reason == 'MAX_TOKENS':
                         print("üí° –ü—Ä–∏—á–∏–Ω–∞: –î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç —Ç–æ–∫–µ–Ω–æ–≤, —É–≤–µ–ª–∏—á—å—Ç–µ max_output_tokens")
                     return False
             else:
                 print("‚ùå –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω, –Ω–æ —Ç–µ–∫—Å—Ç –ø—É—Å—Ç–æ–π")
                 print(f"üìã –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç: {response}")
                 return False
         else:
             print("‚ùå –û—Ç–≤–µ—Ç –Ω–µ –ø–æ–ª—É—á–µ–Ω (None)")
             return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        print(f"üìã –¢–∏–ø –æ—à–∏–±–∫–∏: {type(e)}")
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
        if "404" in str(e):
            print("üîç –û—à–∏–±–∫–∞ 404: –ú–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            print("üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
            print("   - –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏")
            print("   - –ú–æ–¥–µ–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ v1alpha API")
            print("   - –ú–æ–¥–µ–ª—å —Ç—Ä–µ–±—É–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞")
        elif "403" in str(e):
            print("üîç –û—à–∏–±–∫–∞ 403: –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω")
            print("üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
            print("   - –ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á")
            print("   - –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ preview –º–æ–¥–µ–ª–∏")
        elif "429" in str(e):
            print("üîç –û—à–∏–±–∫–∞ 429: –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤")
        
        return False

def test_fallback_model():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É —Å –ø—Ä–µ–¥—ã–¥—É—â–µ–π –º–æ–¥–µ–ª—å—é –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è"""
    
    print("\nüîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –º–æ–¥–µ–ª–∏ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è...")
    print("=" * 50)
    
    api_key = os.getenv('GEMINI_API_KEY')
    if not api_key:
        print("‚ùå GEMINI_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    try:
        from google import genai
        from google.genai import types
        
        client = genai.Client(
            api_key=api_key,
            http_options=types.HttpOptions(api_version='v1alpha')
        )
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é –º–æ–¥–µ–ª—å
        response = client.models.generate_content(
            model='gemini-2.0-flash-preview-05-20',
            contents='–û—Ç–≤–µ—Ç—å –æ–¥–Ω–∏–º —Å–ª–æ–≤–æ–º: —Ç–µ—Å—Ç',
            config=types.GenerateContentConfig(
                temperature=0.1,
                max_output_tokens=10
            )
        )
        
        if response and response.text:
            print(f"‚úÖ –ü—Ä–µ–¥—ã–¥—É—â–∞—è –º–æ–¥–µ–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç! –û—Ç–≤–µ—Ç: '{response.text.strip()}'")
            return True
        else:
            print("‚ùå –ü—Ä–µ–¥—ã–¥—É—â–∞—è –º–æ–¥–µ–ª—å —Ç–æ–∂–µ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å –ø—Ä–µ–¥—ã–¥—É—â–µ–π –º–æ–¥–µ–ª—å—é: {e}")
        return False

if __name__ == "__main__":
    print("üß™ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê GEMINI 2.5 FLASH PREVIEW 05-20")
    print("=" * 60)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—É—é –º–æ–¥–µ–ª—å
    success = test_gemini_25()
    
    if not success:
        # –ï—Å–ª–∏ –Ω–æ–≤–∞—è –º–æ–¥–µ–ª—å –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, —Ç–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é
        fallback_success = test_fallback_model()
        
        if fallback_success:
            print("\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø: –ü—Ä–µ–¥—ã–¥—É—â–∞—è –º–æ–¥–µ–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ–≤–∞—è - –Ω–µ—Ç")
            print("   –í–æ–∑–º–æ–∂–Ω–æ, –Ω–æ–≤–∞—è –º–æ–¥–µ–ª—å –µ—â–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –∏–ª–∏ —Ç—Ä–µ–±—É–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞")
        else:
            print("\n‚ùå –ü–†–û–ë–õ–ï–ú–ê: –û–±–µ –º–æ–¥–µ–ª–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç")
            print("   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API –∫–ª—é—á –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É")
    
    print("\n" + "=" * 60)
    print("üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ") 