#!/usr/bin/env python3
from process_video import VideoProcessor
import os

def test_summary_fix():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ summary"""
    
    print("üîç –¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ summary")
    print("=" * 50)
    
    processor = VideoProcessor(os.getenv('GEMINI_API_KEY'))
    video_id = '3TMWNkgbJL0'
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç
    print("üìù –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–∞...")
    transcript = processor._get_transcript(video_id)
    
    if transcript:
        print(f"‚úÖ –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç –ø–æ–ª—É—á–µ–Ω: {len(transcript)} —Å–∏–º–≤–æ–ª–æ–≤")
        print(f"üìã –í–∞–ª–∏–¥–Ω—ã–π: {processor._is_transcript_valid(transcript)}")
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º summary
        print("\nü§ñ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è summary...")
        summary = processor._generate_summary(transcript)
        
        if summary:
            is_gemini = "fallback" not in summary.lower()
            print(f"‚úÖ Summary —Å–æ–∑–¥–∞–Ω: {len(summary)} —Å–∏–º–≤–æ–ª–æ–≤")
            print(f"ü§ñ –ß–µ—Ä–µ–∑ Gemini API: {is_gemini}")
            if is_gemini:
                print(f"üìÑ Summary: {summary[:200]}...")
            else:
                print("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è fallback summary")
        else:
            print("‚ùå Summary –Ω–µ —Å–æ–∑–¥–∞–Ω")
    else:
        print("‚ùå –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç –Ω–µ –ø–æ–ª—É—á–µ–Ω")

if __name__ == "__main__":
    test_summary_fix() 