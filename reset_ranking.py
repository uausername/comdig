#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–±—Ä–æ—Å–∞ —Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤

# –°–±—Ä–æ—Å–∏—Ç—å —Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –≤–∏–¥–µ–æ ID 1
docker-compose run --rm comments-downloader python reset_ranking.py 1

# –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
docker-compose run --rm comments-downloader python reset_ranking.py --stats
"""

from models import get_db_session, Video, Comment

def reset_ranking_for_video(video_id: int) -> bool:
    """
    –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –≤—Å–µ—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –≤–∏–¥–µ–æ
    
    Args:
        video_id: ID –≤–∏–¥–µ–æ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        
    Returns:
        bool: True –µ—Å–ª–∏ —Å–±—Ä–æ—Å –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ
    """
    session = get_db_session()
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ
        video = session.query(Video).filter_by(id=video_id).first()
        if not video:
            print(f"‚ùå –í–∏–¥–µ–æ —Å ID {video_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            return False
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Å —Ä–∞–Ω–≥–∞–º–∏
        ranked_comments = session.query(Comment).filter(
            Comment.video_id == video_id,
            Comment.comment_rank.isnot(None)
        ).all()
        
        if not ranked_comments:
            print(f"‚ÑπÔ∏è –£ –≤–∏–¥–µ–æ {video_id} –Ω–µ—Ç –ø—Ä–æ—Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤")
            return True
        
        print(f"üîÑ –°–±—Ä–∞—Å—ã–≤–∞—é —Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è {len(ranked_comments)} –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –≤–∏–¥–µ–æ {video_id}")
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ä–∞–Ω–≥–∏
        for comment in ranked_comments:
            comment.comment_rank = None
        
        session.commit()
        print(f"‚úÖ –†–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–±—Ä–æ—à–µ–Ω–æ –¥–ª—è –≤–∏–¥–µ–æ {video_id}")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ —Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        session.rollback()
        return False
    finally:
        session.close()

def show_ranking_stats():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏—è"""
    session = get_db_session()
    try:
        videos = session.query(Video).all()
        print("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏—è:")
        print("=" * 50)
        
        total_comments = 0
        total_ranked = 0
        
        for video in videos:
            comments_count = session.query(Comment).filter_by(video_id=video.id).count()
            ranked_count = session.query(Comment).filter(
                Comment.video_id == video.id,
                Comment.comment_rank.isnot(None)
            ).count()
            
            total_comments += comments_count
            total_ranked += ranked_count
            
            print(f"\nüé¨ –í–∏–¥–µ–æ ID: {video.id}")
            print(f"   –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {comments_count}")
            print(f"   –ü—Ä–æ—Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–æ: {ranked_count}")
            print(f"   –ü—Ä–æ–≥—Ä–µ—Å—Å: {ranked_count/comments_count*100:.1f}%" if comments_count > 0 else "   –ü—Ä–æ–≥—Ä–µ—Å—Å: 0%")
        
        print(f"\nüìà –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"   –í—Å–µ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {total_comments}")
        print(f"   –ü—Ä–æ—Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–æ: {total_ranked}")
        print(f"   –û–±—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å: {total_ranked/total_comments*100:.1f}%" if total_comments > 0 else "   –û–±—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å: 0%")
        
    finally:
        session.close()

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    import sys
    
    if len(sys.argv) < 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print("  python reset_ranking.py <video_id>     # –°–±—Ä–æ—Å–∏—Ç—å —Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –≤–∏–¥–µ–æ")
        print("  python reset_ranking.py --stats        # –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏—è")
        return
    
    try:
        if sys.argv[1] == "--stats":
            show_ranking_stats()
        else:
            video_id = int(sys.argv[1])
            print(f"üîÑ –°–±—Ä–æ—Å —Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –≤–∏–¥–µ–æ ID: {video_id}")
            reset_ranking_for_video(video_id)
        
    except ValueError:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç video_id. –î–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ.")
    except KeyboardInterrupt:
        print("\nüëã –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main()

